var burger=document.querySelector(".hamburger"),menu=document.getElementById("overlay-menu");burger.addEventListener("click",function(){burger.classList.contains("is-active")?(burger.classList.remove("is-active"),menu.style.display="none"):(burger.classList.add("is-active"),menu.style.display="block")}),$(".link").on("click",function(){var e=$(this).attr("data-project"),t=document.getElementById(e);$(t).css("display","block"),t.style.height="98vh",$(".animator").addClass("animato")}),$(".close-cs").on("click",function(){$(".case-study").css("height","0vh"),$(".case-study-right").scrollTop(0),setTimeout(()=>{$(".case-study").css("display","none")},1e3)});var cursor={delay:10,_x:0,_y:0,endX:window.innerWidth/2,endY:window.innerHeight/2,cursorVisible:!0,cursorEnlarged:!1,$dot:document.querySelector(".cursor-dot"),$outline:document.querySelector(".cursor-dot-outline"),$inverted:document.getElementsByClassName("invert"),init:function(){this.dotSize=this.$dot.offsetWidth,this.outlineSize=this.$outline.offsetWidth,this.setupEventListeners(),this.animateDotOutline()},setupEventListeners:function(){var e=this;document.querySelectorAll("a").forEach(function(t){t.addEventListener("mouseover",function(){e.cursorEnlarged=!0,e.toggleCursorSize()}),t.addEventListener("mouseout",function(){e.cursorEnlarged=!1,e.toggleCursorSize()})}),document.querySelectorAll("button").forEach(function(t){t.addEventListener("mouseover",function(){e.cursorEnlarged=!0,e.toggleCursorSize()}),t.addEventListener("mouseout",function(){e.cursorEnlarged=!1,e.toggleCursorSize()})}),document.querySelectorAll(".mouse-big").forEach(function(t){t.addEventListener("mouseover",function(){e.cursorEnlarged=!0,e.toggleCursorSize()}),t.addEventListener("mouseout",function(){e.cursorEnlarged=!1,e.toggleCursorSize()})}),document.addEventListener("mousedown",function(){e.cursorEnlarged=!0,e.toggleCursorSize()}),document.addEventListener("mouseup",function(){e.cursorEnlarged=!1,e.toggleCursorSize()}),document.addEventListener("mousemove",function(t){e.cursorVisible=!0,e.toggleCursorVisibility(),e.endX=t.pageX,e.endY=t.pageY,e._x+=(e.endX-e._x)/e.delay,e._y+=(e.endY-e._y)/e.delay,e.$dot.style.top=e._y+"px",e.$dot.style.left=e._x+"px"}),document.addEventListener("mouseenter",function(t){e.cursorVisible=!0,e.toggleCursorVisibility(),e.$dot.style.opacity=1}),document.addEventListener("mouseleave",function(t){e.cursorVisible=!0,e.toggleCursorVisibility(),e.$dot.style.opacity=0})},animateDotOutline:function(){this._x+=(this.endX-this._x)/this.delay,this._y+=(this.endY-this._y)/this.delay,this.$outline.style.top=this._y+"px",this.$outline.style.left=this._x+"px",requestAnimationFrame(this.animateDotOutline.bind(this))},toggleCursorSize:function(){this.cursorEnlarged?(this.$dot.style.transform="translate(-50%, -50%) scale(5)",this.$dot.style.background="rgba(255, 255, 255, 0)",this.$dot.style.border="1px solid rgba(255, 255, 2555, 1)"):(this.$dot.style.transform="translate(-50%, -50%) scale(1)",this.$dot.style.background="rgba(255, 255, 255, 1)",this.$dot.style.border="0px solid rgba(255, 255, 2555, 1)")},toggleCursorVisibility:function(){this.cursorVisible?(this.$dot.style.opacity=1,this.$outline.style.opacity=1):(this.$dot.style.opacity=0,this.$outline.style.opacity=0)}};cursor.init();class EffectShell{constructor(e=document.body,t=null){this.container=e,this.itemsWrapper=t,this.container&&this.itemsWrapper&&(this.setup(),this.initEffectShell().then(()=>{console.log("load finished"),this.isLoaded=!0,this.isMouseOver&&this.onMouseOver(this.tempItemIndex),this.tempItemIndex=null}),this.createEventsListeners())}setup(){window.addEventListener("resize",this.onWindowResize.bind(this),!1),this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.document.width,this.document.height),this.renderer.setPixelRatio(window.devicePixelRatio),this.container.appendChild(this.renderer.domElement),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(40,this.document.aspectRatio,.1,100),this.camera.position.set(0,0,3),this.mouse=new THREE.Vector2,this.timeSpeed=1,this.time=0,this.clock=new THREE.Clock,this.renderer.setAnimationLoop(this.render.bind(this))}render(){this.time+=this.clock.getDelta()*this.timeSpeed,this.renderer.render(this.scene,this.camera)}initEffectShell(){let e=[];this.items=this.itemsElements;const t=new THREE.TextureLoader;return this.items.forEach((i,n)=>{e.push(this.loadTexture(t,i.img?i.img.src:null,n))}),new Promise((t,i)=>{Promise.all(e).then(e=>{e.forEach((e,t)=>{this.items[t].texture=e.texture}),t()})})}createEventsListeners(){this.items.forEach((e,t)=>{e.element.addEventListener("mouseover",this._onMouseOver.bind(this,t),!1)}),this.container.addEventListener("mousemove",this._onMouseMove.bind(this),!1),this.itemsWrapper.addEventListener("mouseleave",this._onMouseLeave.bind(this),!1)}_onMouseLeave(e){this.isMouseOver=!1,this.onMouseLeave(e)}_onMouseMove(e){this.mouse.x=e.clientX/this.document.width*2-1,this.mouse.y=-e.clientY/this.document.height*2+1,this.onMouseMove(e)}_onMouseOver(e,t){this.tempItemIndex=e,this.onMouseOver(e,t)}onWindowResize(){this.camera.aspect=this.document.aspectRatio,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.document.width,this.document.height)}onUpdate(){}onMouseEnter(e){}onMouseLeave(e){}onMouseMove(e){}onMouseOver(e,t){}get document(){let e=this.container.clientWidth,t=this.container.clientHeight;return{width:e,height:t,aspectRatio:e/t}}get viewSize(){let e=this.camera.position.z,t=this.camera.fov*Math.PI/180,i=2*Math.tan(t/2)*e;return{width:i*this.document.aspectRatio,height:i,vFov:t}}get itemsElements(){return[...this.itemsWrapper.querySelectorAll(".link")].map((e,t)=>({element:e,img:e.querySelector("img")||null,index:t}))}loadTexture(e,t,i){return new Promise((n,o)=>{t?e.load(t,e=>{n({texture:e,index:i})},void 0,e=>{console.error("An error happened.",e),o(e)}):n({texture:null,index:i})})}}Number.prototype.map=function(e,t,i,n){return(this-e)*(n-i)/(t-e)+i};const container=document.body,itemsWrapper=document.querySelector(".grid"),loader=document.querySelector(".loading"),preloadImages=()=>new Promise((e,t)=>{imagesLoaded(document.querySelectorAll("img"),e),imagesLoaded(document.querySelectorAll("svg"),e)});preloadImages().then(()=>{if(window.matchMedia("(min-width: 768px)").matches){new RGBShiftEffect(container,itemsWrapper,{strength:.55})}setTimeout(function(){loader.style.display="none"},3e3)}),anime({targets:".progress",keyframes:[{width:"0%",background:"#585858"},{width:"20%"},{width:"50%"},{width:"70%"},{width:"85%"},{width:"95%"},{width:"100%",background:"#fff"}],easing:"easeOutElastic(1, .8)",duration:2600});class RGBShiftEffect extends EffectShell{constructor(e=document.body,t=null,i={}){super(e,t),this.container&&this.itemsWrapper&&(i.strength=i.strength||.95,this.options=i,this.init())}init(){this.position=new THREE.Vector3(0,0,0),this.scale=new THREE.Vector3(1,1,1),this.geometry=new THREE.PlaneBufferGeometry(1,1,32,32),this.uniforms={uTime:{value:0},uTexture:{value:null},uOffset:{value:new THREE.Vector2(0,0)},uAlpha:{value:0}},this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"\n        uniform vec2 uOffset;\n\n        varying vec2 vUv;\n\n        vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {\n          float M_PI = 3.1415926535897932384626433832795;\n          position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n          position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n          return position;\n        }\n\n        void main() {\n          vUv = uv;\n          vec3 newPosition = position;\n          newPosition = deformationCurve(position,uv,uOffset);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n        }\n      ",fragmentShader:"\n        uniform sampler2D uTexture;\n        uniform float uAlpha;\n        uniform vec2 uOffset;\n\n        varying vec2 vUv;\n\n        vec3 rgbShift(sampler2D texture, vec2 uv, vec2 offset) {\n          float r = texture2D(uTexture,vUv + uOffset).r;\n          vec2 gb = texture2D(uTexture,vUv).gb;\n          return vec3(r,gb);\n        }\n\n        void main() {\n          vec3 color = rgbShift(uTexture,vUv,uOffset);\n          gl_FragColor = vec4(color,uAlpha);\n        }\n      ",transparent:!0}),this.plane=new THREE.Mesh(this.geometry,this.material),this.scene.add(this.plane)}onMouseEnter(){this.currentItem&&this.isMouseOver||(this.isMouseOver=!0,TweenLite.to(this.uniforms.uAlpha,.5,{value:1,delay:.3,ease:Power4.easeOut}))}onMouseLeave(e){TweenLite.to(this.uniforms.uAlpha,.5,{value:0,ease:Power4.easeOut})}onMouseMove(e){let t=this.mouse.x.map(-1,1,-this.viewSize.width/2,this.viewSize.width/2),i=this.mouse.y.map(-1,1,-this.viewSize.height/2,this.viewSize.height/2);this.position=new THREE.Vector3(t,i,0),TweenLite.to(this.plane.position,1,{x:t,y:i,ease:Power4.easeOut,onUpdate:this.onPositionUpdate.bind(this)})}onPositionUpdate(){let e=this.plane.position.clone().sub(this.position).multiplyScalar(-this.options.strength);this.uniforms.uOffset.value=e}onMouseOver(e,t){this.isLoaded&&(this.onMouseEnter(),this.currentItem&&this.currentItem.index===e||this.onTargetChange(e))}onTargetChange(e){if(this.currentItem=this.items[e],!this.currentItem.texture)return;let t=this.currentItem.img.naturalWidth/this.currentItem.img.naturalHeight;this.scale=new THREE.Vector3(t,1,1),this.uniforms.uTexture.value=this.currentItem.texture,this.plane.scale.copy(this.scale)}}var controller=new ScrollMagic.Controller;new ScrollMagic.Scene({duration:"100%",triggerHook:"onEnter",triggerElement:"#blocks"}).setClassToggle(".anime__line-vertical","entered").addTo(controller);var projectLength=$("#projects").height(),projectScene=new ScrollMagic.Scene({duration:projectLength+"100vh",offset:100,triggerHook:"onCenter",triggerElement:".grid"}).setClassToggle(".anime__line-horizontal-from-left","entered").addTo(controller),marqueeScene=new ScrollMagic.Scene({duration:window.innerHeight,triggerHook:"onEnter",triggerElement:"#marquee"}).setClassToggle(".anime__line-horizontal","entered").addTo(controller),csLength=$(".cs-section").height(),csController=new ScrollMagic.Controller({container:".case-study"});new ScrollMagic.Scene({duration:"100%",triggerHook:"onEnter",triggerElement:".cs-lower"}).setClassToggle(".cs-horizontal-line.one","grow-liner").addTo(csController),new ScrollMagic.Scene({duration:"100%",triggerHook:"onEnter",triggerElement:".brief"}).setClassToggle(".cs-horizontal-line.two","grow-liner").addTo(csController),new ScrollMagic.Scene({duration:"100%",triggerHook:"onEnter",triggerElement:".functionality"}).setClassToggle(".cs-horizontal-line.three","grow-liner").addTo(csController),new ScrollMagic.Scene({duration:"100%",triggerHook:"onEnter",triggerElement:".technology"}).setClassToggle(".cs-horizontal-line.four","grow-liner").addTo(csController),new ScrollMagic.Scene({duration:"100%",triggerHook:"onEnter",triggerElement:".cs-section.links"}).setClassToggle(".cs-horizontal-line.five","grow-liner").addTo(csController);class StretchEffect extends EffectShell{constructor(e=document.body,t=null,i={}){super(e,t),this.container&&this.itemsWrapper&&(i.strength=i.strength||.25,this.options=i,this.init())}init(){this.position=new THREE.Vector3(0,0,0),this.scale=new THREE.Vector3(1,1,1),this.geometry=new THREE.PlaneBufferGeometry(1,1,32,32),this.uniforms={uTexture:{value:null},uOffset:{value:new THREE.Vector2(0,0)},uAlpha:{value:0}},this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"\n        uniform vec2 uOffset;\n\n        varying vec2 vUv;\n\n        vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {\n          float M_PI = 3.1415926535897932384626433832795;\n          position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n          position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n          return position;\n        }\n\n        void main() {\n          vUv =  uv + (uOffset * 2.);\n          vec3 newPosition = position;\n          newPosition = deformationCurve(position,uv,uOffset);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n        }\n      ",fragmentShader:"\n        uniform sampler2D uTexture;\n        uniform float uAlpha;\n\n        varying vec2 vUv;\n\n        vec2 scaleUV(vec2 uv,float scale) {\n          float center = 0.5;\n          return ((uv - center) * scale) + center;\n        }\n\n        void main() {\n          vec3 color = texture2D(uTexture,scaleUV(vUv,0.8)).rgb;\n          gl_FragColor = vec4(color,uAlpha);\n        }\n      ",transparent:!0}),this.plane=new THREE.Mesh(this.geometry,this.material),this.scene.add(this.plane)}onMouseEnter(){this.currentItem&&this.isMouseOver||(this.isMouseOver=!0,TweenLite.to(this.uniforms.uAlpha,.5,{value:1,ease:Power4.easeOut}))}onMouseLeave(e){TweenLite.to(this.uniforms.uAlpha,.5,{value:0,ease:Power4.easeOut})}onMouseMove(e){let t=this.mouse.x.map(-1,1,-this.viewSize.width/2,this.viewSize.width/2),i=this.mouse.y.map(-1,1,-this.viewSize.height/2,this.viewSize.height/2);this.position=new THREE.Vector3(t,i,0),TweenLite.to(this.plane.position,1,{x:t,y:i,ease:Power4.easeOut,onUpdate:this.onPositionUpdate.bind(this)})}onPositionUpdate(){let e=this.plane.position.clone().sub(this.position).multiplyScalar(-this.options.strength);this.uniforms.uOffset.value=e}onMouseOver(e,t){this.isLoaded&&(this.onMouseEnter(),this.currentItem&&this.currentItem.index===e||this.onTargetChange(e))}onTargetChange(e){if(this.currentItem=this.items[e],!this.currentItem.texture)return;let t=this.currentItem.img.naturalWidth/this.currentItem.img.naturalHeight;this.scale=new THREE.Vector3(t,1,1),this.uniforms.uTexture.value=this.currentItem.texture,this.plane.scale.copy(this.scale)}}anime({targets:".work ellipse",strokeDashoffset:[anime.setDashoffset,0],easing:"easeInOutSine",duration:1500,delay:function(e,t){return 250*t},direction:"alternate",loop:!1});class TrailsEffect extends EffectShell{constructor(e=document.body,t=null,i={}){super(e,t),this.container&&this.itemsWrapper&&(i.strength=i.strength||.25,i.amount=i.amount||5,i.duration=i.duration||.5,this.options=i,this.init())}init(){this.position=new THREE.Vector3(0,0,0),this.scale=new THREE.Vector3(1,1,1),this.geometry=new THREE.PlaneBufferGeometry(1,1,16,16),this.uniforms={uTime:{value:0},uTexture:{value:null},uOffset:{value:new THREE.Vector2(0,0)},uAlpha:{value:0}},this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"\n        uniform vec2 uOffset;\n\n        varying vec2 vUv;\n\n        vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {\n          float M_PI = 3.1415926535897932384626433832795;\n          position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n          position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n          return position;\n        }\n\n        void main() {\n          vUv = uv;\n          vec3 newPosition = position;\n          newPosition = deformationCurve(position,uv,uOffset);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n        }\n      ",fragmentShader:"\n        uniform sampler2D uTexture;\n        uniform float uAlpha;\n        uniform vec2 uOffset;\n\n        varying vec2 vUv;\n\n        void main() {\n          vec3 color = texture2D(uTexture,vUv).rgb;\n          gl_FragColor = vec4(color,uAlpha);\n        }\n      ",transparent:!0}),this.plane=new THREE.Mesh(this.geometry,this.material),this.trails=[];for(let e=0;e<this.options.amount;e++){let e=this.plane.clone();this.trails.push(e),this.scene.add(e)}}onMouseEnter(){this.currentItem&&this.isMouseOver||(this.isMouseOver=!0,TweenLite.to(this.uniforms.uAlpha,.5,{value:1,ease:Power4.easeOut}))}onMouseLeave(e){TweenLite.to(this.uniforms.uAlpha,.5,{value:0,ease:Power4.easeOut})}onMouseMove(e){let t=this.mouse.x.map(-1,1,-this.viewSize.width/2,this.viewSize.width/2),i=this.mouse.y.map(-1,1,-this.viewSize.height/2,this.viewSize.height/2);TweenLite.to(this.position,1,{x:t,y:i,ease:Power4.easeOut,onUpdate:()=>{let e=this.position.clone().sub(new THREE.Vector3(t,i,0)).multiplyScalar(-this.options.strength);this.uniforms.uOffset.value=e}}),this.trails.forEach((e,n)=>{let o=this.options.duration*this.options.amount-this.options.duration*n;TweenLite.to(e.position,o,{x:t,y:i,ease:Power4.easeOut})})}onMouseOver(e,t){this.isLoaded&&(this.onMouseEnter(),this.currentItem&&this.currentItem.index===e||this.onTargetChange(e))}onTargetChange(e){if(this.currentItem=this.items[e],!this.currentItem.texture)return;let t=this.currentItem.img.naturalWidth/this.currentItem.img.naturalHeight;this.scale=new THREE.Vector3(t,1,1),this.uniforms.uTexture.value=this.currentItem.texture,this.trails.forEach(e=>{e.scale.copy(this.scale)})}}